<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<link rel="stylesheet" type="text/css" href="docs.css">
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<title>Change Log</title>
<!-- Generated by MAKEDOC v1.1, (c) 2000,2003 by David Cuny, Derek Parnell, Matt Lewis -->
<!-- on 2006/10/13 at 09h28m39 -->
<style>h4 {text-align: right}</style>
<title>Change Log</title>
</head>
<body>
<div id = "Content">
<h4>Change Log<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<div id="Header"><a name="CHANGE_LOG">Change Log</a></div>
<p><h3>History
</h3><br>
<div class="box"><pre>
 v1.9.0 * Redirection of STDOUT to debugger
        * <a href="RDS_INCOMPATIBLE_FEATURE.htm#FIND_FROM">find_from</a>(), <a href="RDS_INCOMPATIBLE_FEATURE.htm#MATCH_FROM">match_from</a>()
        * Fixed debugger crash when displaying long variable values.  Limited
          display to 60,000 characters.
        * Fixed bug in crash routine
        * Fixed parser bug that didn't identify methods correctly if they had the
          same name as a class.

 v1.8.1 * Added namespace qualifications to FUNC to avoid conflicts with matheval
        * Improved intialization when embedded
        * Fixed bug that caused a crash if an embedded routine executed any other
          embedded code
        * Trace will now properly trace code on the same line as an if-then or else
        * Variable type info is always saved in a shrouded file
        * Fixed parsing bug that incorrectly parsed a floating point number that
          started with the decimal point
        * Debugger allows display of subscripts, horizontal scrolling for the watch
          list, and copy watched variables (using CTRL-C) to the clipboard
        * Fixed some cases where debugger wasn't being cleaned up upon exit and
          caused a (harmless, but annoying) machine exception
        * Can alter variable values from the debugger

 v1.8.0 * Pass by reference added as non-RDS compatible feature
        * Debugger no longer crashes on app close under Windows
        * Debugger uses its own copy of wxEuphoria dll/so 
        * Debugger will display subscripts
        * Fixed preprocessor bugs
        * OOEU can now be embedded in other Euphoria applications (see <a href="EMBEDDING.htm#EMBEDDING">Embedding</a>)

 v1.7.1 * Fixed bug when using constructors of class members
        * Procedures that didn't use goto could cause a crash
        * Parser recognizes that subscripted sequences are really objects when
          considering polymorphism of member functions
        * Fixed preprocessing bugs
        * Fixed 'sequence of' bugs
        * Preprocesses literal arguments to routine_id() to proper routine decoration
        * Functions (and methods) may define a return type, which will be considered
          for polymorphism purposes

 v1.7.0 * <a href="#GOTO">goto</a> statement now supported
        * Constructors can be created by making method functions with the same name
          as a class.
        * Fixed preprocessing bugs.

 v1.6.0 * Can define variables of type 'sequence of ClassName'
        * Debugger not loaded until required
        * Source code sync'd with PD 2.5 Official Version (minor compared to beta changes)
        * <a href="#CONTINUE">continue</a> keyword for loops

 v1.5.1 * Fixed bug with member on LHS of assignment, and a member in parameters of a
          function call.
        * Methods can be called recursively
        * Eliminated erroneous warnings when members not used in methods

 v1.5.0 * eval'ed code won't leak memory if without trace is in effect on the call to eval()
        * Fixed more preprocessor bugs
        * Fixed bug with method calls on data members
        * <a href="RDS_INCOMPATIBLE_FEATURE.htm#VAR_ID">var_id</a>(), <a href="RDS_INCOMPATIBLE_FEATURE.htm#READ_VAR">read_var</a>(), <a href="RDS_INCOMPATIBLE_FEATURE.htm#WRITE_VAR">write_var</a>(), <a href="#DUMP_VARIABLE">dump_variables</a>()
        * Fixed shrouding bugs (now using shrouded format 2)
        * Fixed error messages returned by <a href="RDS_INCOMPATIBLE_FEATURE.htm#EVAL_ERROR">eval_error</a>()

 v1.4.1 * Incorporated RDS 2.5 beta changes
        * Fixed bug: polymorphism didn't work if a sequence was subscripted from within
          parameters of a method
        * On a crash, details are sent to ooeu.err, and normal file error dump
          is sent to ex.err for the program being run
        * Fixed bugs in preprocessor.  Now handles whitespace between tokens better.

 v1.4.0 * Data members for classes

 v1.3.1 * eval() fixed, error handling improved

 v1.3   * Code with eval() can be shrouded
        * Modified shroud format
        * Added -c option to shroud without deleting any symbols
        * Experimental -i option to include files shrouded with the -c option
        * Included dis.ex, which is an il code dissasembler
        * Tracing module now updates privates and changing variables automatically
        * Tracing API modified
        * routine_id is now zero-based
        * Callbacks received while control has been handed off to the tracing module
          are executed, but not traced.  With GUI programs and event handling, this
          could cause crashes previously.

 v1.2   * First stab at an eval()
        * Fixed binder bug
        * Unlimited callbacks through asm
        * New shrouding format

 v1.1   * Preprocessor option to convert ooeu code to standard RDS code
        * Methods called like handle class.method() were not parsed correctly
        * Fixed bug when method name was same as previous routine name
        * Now an ex.err file has the traceback of the last 10 lines like the
          RDS interpreter does (shrouded code will do this, too, with -full_debug option)
        * Initial tracing support through dll

 v1.0   * First release
</pre></div>

</p>
<hr>
